package game;


import objects.Asteroid;
import objects.Bullet;
import objects.Obj;
import objects.Ship;

import org.newdawn.slick.BasicGame;
import org.newdawn.slick.Color;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.AppGameContainer;

public class SimpleTest extends BasicGame 
{
	private Ship ship;
	public List<Obj> bulletList;
	public List<Obj> astList;
	public List<List<Obj>> gameList;
	
	public SimpleTest() 
	{
		super("SpaceGame");
		
	}

	@Override
	public void init(GameContainer container) throws SlickException 
	{
		int size = 10;
		int speed = 1;
		int rotation = 20;
		float range = 100;
		ship = new Ship(size, speed, rotation, range, this);
		
		
		
		
		bulletList = new List<Obj>();
		
		astList = new List<Obj>();
		List<Obj> prev = astList;
		for (int i = 0; i < 100; i++)
		{
			float[] loc = new float[2];
			loc[0] = (float) (Math.random()* container.getWidth());
			loc[1] = (float) (Math.random()* container.getHeight());
			Asteroid ast = new Asteroid(loc, 15);
			List<Obj> wrapper = new List<Obj>(ast, prev);
			prev.next = wrapper;
			prev = wrapper;
		}
		
		gameList = new List<List<Obj>>();
		gameList.add(bulletList);
		gameList.add(astList);
	}

	@Override
	public void update(GameContainer container, int delta) throws SlickException 
	{
		ship.update(delta);
		CollisionChecker.checkAll(gameList);
		List<List<Obj>> pointer = gameList.next;
		while(pointer != null)
		{
			List<Obj> pointer1 = pointer.data.next;
			while (pointer1 != null)
			{
				pointer1.data.update(delta);
				pointer1 = pointer1.next;
			}
			pointer = pointer.next;
		}
		
	}
	
	@Override
	public void keyPressed(int key, char c)
	{
		if (c == 'a')
			ship.rotateLeft(true);
		else if (c == 'd')
			ship.rotateRight(true);
		else if (c == 'w')
			ship.accelerate(true);
		else if (c == ' ')
		{
			//System.out.println(ship.location[0] + "  " + ship.location[1]);
			ship.fire();
		}
		else if (c == 's')
			ship.stop(true);
	}
	
	@Override
	public void keyReleased(int key, char c)
	{
		if (c == 'a')
			ship.rotateLeft(false);
		else if (c == 'd')
			ship.rotateRight(false);
		else if (c == 'w')
			ship.accelerate(false);
		else if (c == 's')
			ship.stop(false);
	}
	
	@Override
	public void render(GameContainer container, Graphics g) throws SlickException 
	{
		
		g.setLineWidth(.3f);
		//System.out.println(container.getHeight() + "  " + container.getWidth());
		ship.draw(g);

		List<List<Obj>> pointer = gameList.next;
		while(pointer != null)
		{
			List<Obj> pointer1 = pointer.data.next;
			while (pointer1 != null)
			{
				pointer1.data.draw(g);
				pointer1 = pointer1.next;
			}
			pointer = pointer.next;
		}
		
	}

	public static void main(String[] args) 
	{
		try 
		{
			AppGameContainer app = new AppGameContainer(new SimpleTest());
			app.start();
		} 
		catch (SlickException e) 
		{
			e.printStackTrace();
		}
	}
}