package game;

public class List<Thing> 
{
	public Thing data;
	public List<Thing> previous, next;
	
	public List()
	{
	}
	
	public List(Thing data, List<Thing> previous)
	{
		this.data = data;
		this.previous = previous;
	}
	
	public void remove()
	{
		previous.next = next;
		if (next != null)
			next.previous = previous;
	}
	
	public void add(Thing a)
	{
		List<Thing> wrapper = new List<Thing>(a, null);
		if (next != null)
		{
			List<Thing> pointer = next;
			while (pointer.next != null)
			{
				pointer = pointer.next;
			}
			pointer.next = wrapper;
			wrapper.previous = pointer;
		}
		else
		{
			next = wrapper;
			wrapper.previous = this;
		}
	}
	
	// warning, will irreveribly link all of the lists together
	/*public void add(List<Thing> a)
	{
		if (next != null)
		{
			List<Thing> pointer = next;
			while (pointer.next != null)
			{
				pointer = pointer.next;
			}
			pointer.next = wrapper;
			wrapper.previous = pointer;
		}
		else
		{
			next = a;
			a.previous = this;
		}
	} */
}
